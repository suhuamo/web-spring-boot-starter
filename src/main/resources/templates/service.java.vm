package ${package.Service};

import ${superServiceClassPackage};
import com.baomidou.mybatisplus.core.conditions.Wrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package.Entity}.dto.${table.entityPath}.*;
import ${package.Entity}.${entity};
import ${package.Entity}.vo.${entity}VO;

/**
 * <p>
 * $!{table.comment} 服务类
 * </p>
 *
 * @author ${author}
 * @date ${date}
 */
public interface ${table.serviceName} extends IService<${entity}>{


    /**
     * 校验添加数据的参数
     * @param ${table.entityPath}AddDTO
     * @return void
     */
    void validAddData(${entity}AddDTO ${table.entityPath}AddDTO);

    /**
     * 校验更新数据的参数
     * @param ${table.entityPath}UpdateDTO
     * @return void
     */
    void validUpdateData(${entity}UpdateDTO ${table.entityPath}UpdateDTO);

    /**
     * 校验查询数据的参数
     * @param ${table.entityPath}QueryDTO
     * @return void
     */
    void validQueryData(${entity}QueryDTO ${table.entityPath}QueryDTO);

    /**
     * 根据查询数据的参数解析Wrapper
     * @param ${table.entityPath}QueryDTO
     * @return Wrapper
     */
    Wrapper getQueryWrapper(${entity}QueryDTO ${table.entityPath}QueryDTO);

    /**
     * 将分页的数据vo化
     * @param ${table.entityPath}Page
     * @return Page<${entity}VO>
     */
    Page<${entity}VO> pageToVo(Page<${entity}> ${table.entityPath}Page);

    /**
     * 校验指定id的数据是否存在
     * @param id
     * @return Boolean
     */
    Boolean idExists(Integer id);

    /**
     * 将addDto对象转换为po对象--标准化
     * @param ${table.entityPath}AddDTO
     * @return ${entity}
     */
    ${entity} addDtoToPo(${entity}AddDTO ${table.entityPath}AddDTO);

    /**
     * 将updateDto对象转换为po对象--标准化
     * @param ${table.entityPath}UpdateDTO
     * @return ${entity}
     */
    ${entity} updateDtoToPo(${entity}UpdateDTO ${table.entityPath}UpdateDTO);

    /**
     * 将po对转换为vo对象--可视化
     * @param ${table.entityPath}
     * @return ${entity}VO
     */
    ${entity}VO poToVo(${entity} ${table.entityPath});

}
